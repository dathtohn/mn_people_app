var PeopleActions=function(){"use strict";function a(){function a(a){e=a}function b(){return e?e:void console.log("No person set.")}function c(a){f=a}function d(){return f?f:void console.log("No person set.")}var e,f;return{setPersonToDisplay:a,getPersonToDisplay:b,setPersonToDelete:c,getPersonToDelete:d}}function b(){return"undefined"==typeof c&&(c=a()),c}var c;return b}(),Dispatcher=function(){"use strict";function a(){function a(a,b){c[a]=b}function b(a){c[a]&&c[a]()}var c;return c={},{registerHandler:a,fire:b}}function b(){return"undefined"==typeof c&&(c=a()),c}var c;return b}(),App=React.createClass({displayName:"App",render:function(){return React.createElement("div",{className:"app"},React.createElement("h1",{className:"app__title"},"Mommy Nearest People App"),React.createElement(People,null))}}),People=React.createClass({displayName:"People",propTypes:{url:React.PropTypes.string},getDefaultProps:function(){return{url:"http://localhost:3000/api/v1/people"}},getInitialState:function(){return{data:{}}},componentDidMount:function(){this.getPeopleData(),this.registerDeletePersonEvt()},getPeopleData:function(){$.ajax({url:this.props.url,dataType:"json",cache:!1,success:function(a){this.setState({data:a})}.bind(this),error:function(a,b,c){console.error(this.props.url,b,c.toString())}.bind(this)})},registerDeletePersonEvt:function(){var a;a=Dispatcher(),a.registerHandler("delete person",this.handleDeletePersonEvt)},handleDeletePersonEvt:function(){var a,b,c;if(a=PeopleActions(),b=a.getPersonToDelete(),c=b.id){var d;d=this.props.url+"/"+c,$.ajax({url:d,type:"DELETE",success:function(a){this.setState({data:a})}.bind(this),error:function(a,b,c){console.error(this.props.url,b,c.toString())}.bind(this)})}},handlePersonSubmit:function(a){var b,c,d,e;b=Date().now,c={id:b,name:a.name,date_of_birth:a.dateOfBirth},d=this.state.data,e=d.people.concat([c]),this.setState({data:e}),$.ajax({url:this.props.url,dataType:"json",type:"POST",data:{person:c},success:function(a){this.setState({data:a})}.bind(this),error:function(a,b,c){this.setState({data:d}),console.error(this.props.url,b,c.toString())}.bind(this)})},render:function(){return React.createElement("div",{className:"people"},React.createElement(PersonDisplay,null),React.createElement(PeopleDisplay,{data:this.state.data}),React.createElement(PersonForm,{onPersonSubmit:this.handlePersonSubmit}))}}),PeopleDisplay=React.createClass({displayName:"PeopleDisplay",propTypes:{data:React.PropTypes.object},getDefaultProps:function(){return{data:{}}},getInitialState:function(){return{filter:"all"}},handleFilterChange:function(a){this.setState({filter:a})},render:function(){return React.createElement("div",{className:"people-display"},React.createElement("h1",{className:"people-display--title"},"Filter and Delete People at will!"),React.createElement(PeopleDisplayFilter,{handleFilterChange:this.handleFilterChange,filter:this.state.filter}),React.createElement(PeopleDisplayList,{data:this.props.data,filter:this.state.filter}))}}),PeopleDisplayBtnDelete=React.createClass({displayName:"PeopleDisplayBtnDelete",propTypes:{person:React.PropTypes.object},getDefaultProps:function(){return{person:{}}},handleClick:function(){var a,b;a=Dispatcher(),b=PeopleActions(),b.setPersonToDelete(this.props.person),a.fire("delete person")},render:function(){return React.createElement("button",{className:"people-display__btn-delete",onClick:this.handleClick},"delete")}}),PeopleDisplayBtnName=React.createClass({displayName:"PeopleDisplayBtnName",propTypes:{person:React.PropTypes.object},getDefaultProps:function(){return{person:{}}},handleClick:function(){var a,b;a=Dispatcher(),b=PeopleActions(),b.setPersonToDisplay(this.props.person),a.fire("display person")},render:function(){return React.createElement("button",{className:"people-display__btn-name",onClick:this.handleClick},this.props.person.name)}}),PeopleDisplayFilter=React.createClass({displayName:"PeopleDisplayFilter",propTypes:{handleFilterChange:React.PropTypes.func.isRequired,filter:React.PropTypes.string.isRequired},handleOnChange:function(a){this.props.handleFilterChange(a.target.value)},render:function(){return React.createElement("div",{className:"people-display__filter"},React.createElement("input",{id:"people-display__filter-radio--all",type:"radio",name:"filter",value:"all",checked:"all"===this.props.filter,onChange:this.handleOnChange}),React.createElement("label",{className:"people-display__filter-label",htmlFor:"people-display__filter-radio--all"},"All"),React.createElement("input",{id:"people-display__filter-radio--undeleted",type:"radio",name:"filter",value:"undeleted",checked:"undeleted"===this.props.filter,onChange:this.handleOnChange}),React.createElement("label",{className:"people-display__filter-label",htmlFor:"people-display__filter-radio--undeleted"},"Undeleted"),React.createElement("input",{id:"people-display__filter-radio--deleted",type:"radio",name:"filter",value:"deleted",checked:"deleted"===this.props.filter,onChange:this.handleOnChange}),React.createElement("label",{className:"people-display__filter-label",htmlFor:"people-display__filter-radio--deleted"},"Deleted"))}}),PeopleDisplayList=React.createClass({displayName:"PeopleDisplayList",propTypes:{data:React.PropTypes.object,deleted:React.PropTypes.bool,undeleted:React.PropTypes.bool},getDefaultProps:function(){return{data:{},filter:"all"}},getInitialState:function(){return{className:"people-display__list"}},componentWillReceiveProps:function(a){this.handleNextPropsFilter(a.filter,this.props.filter)},shouldComponentUpdate:function(a){return a.data!==this.props.data},handleNextPropsFilter:function(a,b){if(a!==b){var c;switch(c=$(this.getDOMNode()),a){case"deleted":c.removeClass("people-display__list--undeleted").addClass("people-display__list--deleted");break;case"undeleted":c.removeClass("people-display__list--deleted").addClass("people-display__list--undeleted");break;default:c.removeClass("people-display__list--undeleted people-display__list--deleted")}}},updateClassName:function(a,b){$(this.getDOMNode()).addClass(a).removeClass(b)},render:function(){var a,b,c;return a=this.props.data,b=void 0!==a.people?a.people:[],c=b.map(function(a){return React.createElement(PeopleDisplayListItem,{person:a})}),React.createElement("ul",{className:this.state.className},c)}}),PeopleDisplayListItem=React.createClass({displayName:"PeopleDisplayListItem",propTypes:{person:React.PropTypes.object},getDefaultProps:function(){return{person:{}}},render:function(){var a,b;return a="people-display__list-item",this.props.person.deleted_at?(a+=" people-display__list-item--deleted",b=null):b=React.createElement(PeopleDisplayBtnDelete,React.__spread({},this.props)),React.createElement("li",{className:a},React.createElement(PeopleDisplayBtnName,React.__spread({},this.props)),b)}}),PersonDisplay=React.createClass({displayName:"PersonDisplay",getInitialState:function(){return{person:{}}},componentDidMount:function(){this.handleDisplayPersonEvt()},handleDisplayPersonEvt:function(){var a,b;a=Dispatcher(),b=PeopleActions(),a.registerHandler("display person",function(){this.setState({person:b.getPersonToDisplay()})}.bind(this))},render:function(){var a,b;return a=this.state.person,a&&(b=a.name&&a.date_of_birth?a.name+"'s birthday is on "+a.date_of_birth:"Click on a person to display his or her birthday."),React.createElement("div",{className:"person-display"},React.createElement("h1",{className:"person-display__title"},"Display a Person's Birthday."),React.createElement("div",{className:"person-display__birthday"},b))}}),PersonForm=React.createClass({displayName:"PersonForm",propTypes:{onPersonSubmit:React.PropTypes.func.isRequired},getInitialState:function(){return{name:"",dateOfBirth:null}},handleNameChange:function(a){this.setState({name:a.target.value})},handleDateOfBirthChange:function(a){this.setState({dateOfBirth:a.target.value})},handleSubmit:function(a){a.preventDefault();var b,c;b=this.state.name.trim(),c=this.state.dateOfBirth,this.props.onPersonSubmit({name:b,dateOfBirth:c}),b=this.state.name.trim(),c=this.state.dateOfBirth,this.setState({name:"",dateOfBirth:null})},render:function(){return React.createElement("form",{className:"person-form",onSubmit:this.handleSubmit},React.createElement("h1",{className:"person-form__title"},"Enter name and birthday. Then hit create!"),React.createElement("input",{className:"person-form__input-text",type:"text",placeholder:"Name",value:this.state.name,onChange:this.handleNameChange}),React.createElement("input",{className:"person-form__input-date",type:"date",value:this.state.dateOfBirth,onChange:this.handleDateOfBirthChange}),React.createElement("button",{className:"person-form__btn-submit",type:"submit"},"Create Person"))}}),TestUtils=React.addons.TestUtils,appTest=TestUtils.renderIntoDocument(React.createElement(App,null)),appTitleTest=TestUtils.findRenderedDOMComponentWithClass(appTest,"app__title");console.log("Describe App, it 'shows title' is equal to 'Mommy Nearest People App' returns "+("Mommy Nearest People App"===appTitleTest.getDOMNode().textContent));